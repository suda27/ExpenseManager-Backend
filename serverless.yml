service: em-ts-backend

frameworkVersion: "2"
plugins:
  - serverless-plugin-resource-tagging
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-offline-scheduler
package:
  individually: true

custom:
  projectname: em
  usertable: ${self:custom.projectname}-${sls:stage}-user
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'offline'}
  region: ${opt:region, 'us-east-1'}
  lambdaHashingVersion: 20201221
  memorySize: 128
  timeout: 30
  endpointType: regional
  logs:
    restApi:
      executionLogging: false
  environment:
    USER_TABLE: ${self:custom.usertable}
  iam:
    role:
      name: tsbe-lambda-execution-role-${sls:stage}
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
            - s3:*
            - lambda:*
            - cloudformation:*
          Resource: "*"

functions:
  helloworld:
    handler: src/api/user/helloWorld.handler
    name: ${self:custom.projectname}-${sls:stage}-lambda-helloWorld
    events:
      - http:
          path: /api/helloworld
          method: GET
          cors: true
  createUserApi:
    handler: src/api/user/createUserApi.handler
    name: ${self:custom.projectname}-${sls:stage}-create-user
    events:
      - http:
          path: /api/em-create-user
          method: POST
          cors: true
  getUserApi:
    handler: src/api/user/getUserApi.handler
    name: ${self:custom.projectname}-${sls:stage}-get-user
    events:
      - http:
          path: /api/em-get-user
          method: POST
          cors: true
  updateUserApi:
    handler: src/api/user/updateUserApi.handler
    name: ${self:custom.projectname}-${sls:stage}-update-user
    events:
      - http:
          path: /api/em-update-user
          method: PUT
          cors: true

resources:
  Resources:
    EmUserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.usertable}
        AttributeDefinitions:
          - AttributeName: "userID"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "userID"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
